name: driver
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.3.4 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  bottom_navy_bar: ^6.0.0
  provider: ^6.0.2
  shared_preferences: ^2.0.6
  animations: ^2.0.1
  animated_text_kit: ^4.2.1
  fluttertoast: ^8.0.9
  page_transition: "^2.0.2"
  flutter_easyloading: ^3.0.0
  firebase_core: ^3.1.0
  cloud_firestore: ^5.0.1
  firebase_auth: ^5.1.0
  connectivity: ^3.0.6
  easy_localization: ^3.0.0
  cached_network_image: ^3.1.0
  flutter_spinkit: ^5.0.0
  firebase_storage: ^12.0.1
  image_picker: ^0.8.3+2
  carousel_slider: ^4.0.0
  shimmer: ^2.0.0
  skeleton_loader: ^2.0.0+4
  geolocator: ^10.1.0
  smooth_page_indicator: ^1.0.0+2
  geocode: ^1.0.2
  google_api_headers: ^1.3.0
  dropdown_search: ^5.0.2
  date_time_picker:
    git:
      url: https://github.com/DavidHDJ/date_time_picker.git
      ref: 2.1.1
  flutter_switch: ^0.3.2
  badges: ^3.0.2
  sn_progress_dialog: ^1.0.3
  animated_check: ^1.0.5
  intl: ^0.18.0
  url_launcher: ^6.0.17
  flutter_launcher_icons: ^0.11.0
  uuid: ^3.0.5
  flutter_rating_bar: ^4.0.0
  flutter_ameno_ipsum: ^1.0.1
  flutter_native_splash: ^2.1.1
  dropdown_button2: ^1.2.2
  introduction_screen: ^3.0.0
  flutter_countdown_timer: ^4.1.0
  random_string: ^2.3.1
  clipboard: ^0.1.3
  flutter_staggered_grid_view: ^0.6.1
  http: ^1.2.0
  google_fonts: ^4.0.3
  flutter_polyline_points: ^2.0.0
  google_maps_flutter: ^2.1.5
  flutter_local_notifications: ^16.3.2
  firebase_messaging: ^15.0.1
  # yandex_geocoder: ^2.3.1
  curved_navigation_bar: ^1.0.3
  rounded_loading_button_plus: ^3.0.1
  flutter_custom_clippers: ^2.0.0
  country_pickers: ^2.0.0
  flutter_close_app: ^1.0.0
  list_tile_switch: ^1.0.0
  money_formatter: ^0.0.3
  open_street_map_search_and_pick: ^0.1.1
  googleapis: ^13.1.0
  googleapis_auth: ^1.6.0
  flutter_credit_card: ^4.0.1
  pay_with_paystack: ^1.0.8
  flutter_dotenv: ^5.1.0
  flutter_paystack_plus: ^2.0.2
  flutter_stripe: ^10.1.1
  pinput: ^3.0.1
  gap: ^3.0.0
  another_flushbar: ^1.10.22
  geocoding: ^3.0.0
  flutter_background_service: ^5.0.6
  location: ^6.0.2
  device_info_plus: ^10.1.0
  workmanager: ^0.5.2


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: 'assets/image/UShop1024.png'

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/image/
    - assets/languagesFile/
    - .env

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_native_splash:

  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # flutter pub run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # flutter pub run flutter_native_splash:remove

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#0B021C"
  #background_image: "assets/background.png"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: 'assets/image/UShop1024.png'

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. Currently, it is only supported for Android < v12 and iOS.
  #branding: assets/dart.png

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  color_dark: "#09010E"
  #background_image_dark: "assets/dark-background.png"
  image_dark: 'assets/image/UShop1024.png'
  #branding_dark: assets/dart_dark.png

  # Android 12 handles the splash screen differently than previous versions.  Please visit
  # https://developer.android.com/guide/topics/ui/screen
  # Following are Android 12 specific parameter.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 640 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.
    #image: assets/android12splash.png

    # App icon background color.
    #icon_background_color: "#eeeeee"

    # The image_dark parameter and icon_background_color_dark set the image and icon background
    # color when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above.
    #image_dark: assets/android12splash-invert.png
    #icon_background_color_dark: "#111111"

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # To hide the notification bar, use the fullscreen parameter.  Has no affect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
  fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'